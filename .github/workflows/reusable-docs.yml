name: 可复用文档构建

on:
  workflow_call:
    inputs:
      python-version:
        description: 'Python版本'
        required: false
        type: string
        default: '3.12'
      deploy:
        description: '是否部署文档'
        required: false
        type: boolean
        default: false
    outputs:
      build-success:
        description: '构建是否成功'
        value: ${{ jobs.docs.outputs.build_success }}
      doc-url:
        description: '文档URL'
        value: ${{ jobs.docs.outputs.doc_url }}

jobs:
  docs:
    name: 构建文档
    runs-on: ubuntu-latest
    permissions:
      contents: write
    outputs:
      build_success: ${{ steps.build.outputs.success }}
      doc_url: ${{ steps.deployment.outputs.url }}

    steps:
    - name: 检出代码
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: 设置Python
      uses: actions/setup-python@v5
      with:
        python-version: ${{ inputs.python-version }}
        cache: pip

    # 缓存MkDocs构建
    - name: 缓存MkDocs
      uses: actions/cache@v4
      with:
        path: |
          .cache
          site/.cache
        key: ${{ runner.os }}-mkdocs-${{ hashFiles('mkdocs.yml') }}-${{ hashFiles('docs/**') }}
        restore-keys: |
          ${{ runner.os }}-mkdocs-

    - name: 安装依赖
      run: |
        python -m pip install --upgrade pip
        pip install pdm
        echo "使用docs依赖组"
        pdm install -G docs


    - name: 构建文档
      id: build
      run: |
        pdm run mkdocs build --strict
        echo "success=true" >> $GITHUB_OUTPUT
        echo "doc_files=$(find site -type f | wc -l)" >> $GITHUB_OUTPUT

    - name: 上传文档构建结果
      uses: actions/upload-artifact@v4.6.2
      with:
        name: docs-site
        path: site/
        retention-days: 7

    - name: 部署到GitHub Pages
      id: deploy
      if: inputs.deploy == true
      uses: peaceiris/actions-gh-pages@v4
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: ./site/
        publish_branch: gh-pages
        force_orphan: true
        user_name: 'github-actions[bot]'
        user_email: 'github-actions[bot]@users.noreply.github.com'
        full_commit_message: "更新文档 - ${{ github.event.head_commit.message || '手动触发更新' }}"

    - name: 生成部署URL
      id: deployment
      if: inputs.deploy == true
      run: |
        REPO_OWNER="${GITHUB_REPOSITORY_OWNER}"
        REPO_NAME="${GITHUB_REPOSITORY#*/}"
        DOCS_URL="https://${REPO_OWNER}.github.io/${REPO_NAME}/"
        echo "url=${DOCS_URL}" >> $GITHUB_OUTPUT
